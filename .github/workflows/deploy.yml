name: Deploy

on:
  push:
    branches: [main]
    paths:
      - ".version"

jobs:
  # Step 1: Create and push tag
  deploy:
    name: Deploy Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Setup Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Get version from .version file
        id: version
        run: |
          VERSION=$(cat .version | tr -d '[:space:]')
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Version from .version file: $VERSION"

      - name: Create and push tag
        run: |
          VERSION=${{ steps.version.outputs.version }}
          git tag "$VERSION"
          git push origin "$VERSION"
          echo "Created and pushed tag: $VERSION"

  # Step 2: Build and validate for JitPack
  jitpack-build:
    name: JitPack Build Validation
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Validate JitPack build
        run: |
          ./gradlew clean
          ./gradlew build
          ./gradlew test
          ./gradlew assembleRelease

  # Step 3: Create GitHub Release
  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: jitpack-build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get version from .version file
        id: version
        run: |
          VERSION=$(cat .version | tr -d '[:space:]')
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Generate changelog
        id: changelog
        run: |
          VERSION=${{ steps.version.outputs.version }}
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD~1 2>/dev/null || echo "")
          if [ -z "$PREVIOUS_TAG" ]; then
            CHANGELOG=$(git log --oneline --no-merges $(git rev-list --max-parents=0 HEAD)..HEAD)
          else
            CHANGELOG=$(git log --oneline --no-merges $PREVIOUS_TAG..HEAD)
          fi
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGELOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.version }}
          release_name: Release ${{ steps.version.outputs.version }}
          body: |
            ## What's Changed

            ${{ steps.changelog.outputs.changelog }}

            ## Installation

            ### Gradle (JitPack)
            ```gradle
            // Add JitPack repository
            repositories {
                maven { url 'https://jitpack.io' }
            }

            // Add dependency
            dependencies {
                implementation 'com.github.hayanmind:monetai-android:${{ steps.version.outputs.version }}'
            }
            ```

            ### Maven
            ```xml
            <dependency>
                <groupId>com.github.hayanmind</groupId>
                <artifactId>monetai-android</artifactId>
                <version>${{ steps.version.outputs.version }}</version>
            </dependency>
            ```

            ## JitPack Build Status
            [![JitPack](https://jitpack.io/v/hayanmind/monetai-android.svg)](https://jitpack.io/#hayanmind/monetai-android)
          draft: false
          prerelease: false
